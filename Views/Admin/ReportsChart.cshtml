@model dotNET_courseproject_CourseRegister.ViewModels.Admin.AdminReportViewModel
@{
    ViewData["Title"] = "Báo cáo hệ thống";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2 class="mt-3">Báo cáo hệ thống</h2>

<form method="get" asp-action="Reports" class="row g-3 mb-4">
    <div class="col-md-3">
        <label for="fromD" class="form-label">Từ ngày</label>
        <input type="date" name="fromD" class="form-control" value="@ViewBag.FromDate" />
    </div>
    <div class="col-md-3">
        <label for="toD" class="form-label">Đến ngày</label>
        <input type="date" name="toD" class="form-control" value="@ViewBag.ToDate" />
    </div>
    <div class="col-md-3 align-self-end d-flex gap-2">
        <button type="submit" class="btn btn-primary">Lọc dữ liệu</button>

        <a class="btn btn-outline-secondary"
           href="@Url.Action("Reports", "Admin", new { fromD = ViewBag.FromDate, toD = ViewBag.ToDate })">
            Xem theo bảng
        </a>
    </div>
</form>

<div class="row my-3">
    <div class="col-md-4">
        <div class="card text-white bg-primary mb-3">
            <div class="card-body">
                <h5 class="card-title">Người dùng mới</h5>
                <p class="card-text display-6">@Model.TotalNewUsers</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-success mb-3">
            <div class="card-body">
                <h5 class="card-title">Lượt đăng ký khóa học</h5>
                <p class="card-text display-6">@Model.TotalErroled</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-warning mb-3">
            <div class="card-body">
                <h5 class="card-title">Tổng doanh thu</h5>
                <p class="card-text display-6">@Model.TotalRevenue.ToString("N0") đ</p>
            </div>
        </div>
    </div>
</div>

<!-- Biểu đồ -->
<div class="row">
    <div class="col-md-12">
        <h4>Người dùng mới theo ngày</h4>
        <canvas id="newUsersChart" style="height:300px;"></canvas>
    </div>

    <div class="col-md-12 mt-5">
        <h4>Lượt đăng ký khóa học theo ngày</h4>
        <canvas id="enrollmentsChart" style="height:300px;" ></canvas>
    </div>

    <div class="col-md-12 mt-5">
        <h4>Doanh thu theo ngày</h4>
        <canvas id="revenueChart" style="height:300px;"></canvas>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>

    @{
        var labels = Model.NewUsersPerDay.Select(d => d.Date.ToString("dd/MM")).ToList();
        var userCounts = Model.NewUsersPerDay.Select(d => d.Count).ToList();
        var enrollCounts = Model.ErroledPerDays.Select(d => d.Count).ToList();
        var revenueAmounts = Model.RevenuePerDays.Select(d => d.Revenue).ToList();
    }

    <script>
        const labels = @Html.Raw(Json.Serialize(labels));
        const userCounts = @Html.Raw(Json.Serialize(userCounts));
        const enrollCounts = @Html.Raw(Json.Serialize(enrollCounts));
        const revenueAmounts = @Html.Raw(Json.Serialize(revenueAmounts));

        // Tính giá trị lớn nhất +10% để tránh chạm trần
        const getSuggestedMax = data => Math.ceil(Math.max(...data) * 1.1);

        const commonOptions = (suggestedMax, isCurrency = false) => ({
            responsive: true,
            plugins: {
                datalabels: {
                    color: '#000',
                    anchor: 'end',
                    align: 'top',
                    formatter: value => isCurrency
                        ? value.toLocaleString('vi-VN') + ' đ'
                        : value,
                    font: { weight: 'bold' }
                },
                title: { display: false }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    suggestedMax: suggestedMax,
                    title: {
                        display: true,
                        text: isCurrency ? 'Số tiền (VNĐ)' : 'Số lượng'
                    }
                }
            }
        });

        new Chart(document.getElementById('newUsersChart'), {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Người dùng mới',
                    data: userCounts,
                    backgroundColor: 'rgba(54, 162, 235, 0.7)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1,
                    maxBarThickness: 40
                }]
            },
            options: commonOptions(getSuggestedMax(userCounts)),
            plugins: [ChartDataLabels]
        });

        new Chart(document.getElementById('enrollmentsChart'), {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Lượt đăng ký',
                    data: enrollCounts,
                    backgroundColor: 'rgba(40, 167, 69, 0.7)',
                    borderColor: 'rgba(40, 167, 69, 1)',
                    borderWidth: 1,
                    maxBarThickness: 40
                }]
            },
            options: commonOptions(getSuggestedMax(enrollCounts)),
            plugins: [ChartDataLabels]
        });

        new Chart(document.getElementById('revenueChart'), {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Doanh thu (đ)',
                    data: revenueAmounts,
                    backgroundColor: 'rgba(255, 193, 7, 0.7)',
                    borderColor: 'rgba(255, 193, 7, 1)',
                    borderWidth: 1,
                    maxBarThickness: 40
                }]
            },
            options: commonOptions(getSuggestedMax(revenueAmounts), true),
            plugins: [ChartDataLabels]
        });
    </script>
}

